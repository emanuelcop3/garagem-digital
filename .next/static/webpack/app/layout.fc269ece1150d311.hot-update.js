"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/services/chatbotService.ts":
/*!****************************************!*\
  !*** ./src/services/chatbotService.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processMessage: function() { return /* binding */ processMessage; }\n/* harmony export */ });\n/* harmony import */ var _data_cars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/cars */ \"(app-pages-browser)/./src/data/cars.ts\");\n\nasync function processMessage(message) {\n    const lowerMessage = message.toLowerCase();\n    // Padrões para consulta de preço\n    const pricePatterns = [\n        /(?:carros|veículos|modelos) (?:até|abaixo de|menos de|com preço até|com valor até) (?:r\\$|rs|r\\s*\\$)?\\s*(\\d+(?:\\.\\d{3})*(?:,\\d{2})?)/i,\n        /(?:quais|quais são|mostre|mostre-me|me mostre) (?:os|as) (?:carros|veículos|modelos) (?:até|abaixo de|menos de|com preço até|com valor até) (?:r\\$|rs|r\\s*\\$)?\\s*(\\d+(?:\\.\\d{3})*(?:,\\d{2})?)/i,\n        /(?:carros|veículos|modelos) (?:com|de) (?:preço|valor) (?:até|máximo de|máximo) (?:r\\$|rs|r\\s*\\$)?\\s*(\\d+(?:\\.\\d{3})*(?:,\\d{2})?)/i,\n        /(?:buscar|encontrar|procurar) (?:carros|veículos|modelos) (?:até|abaixo de|menos de|com preço até|com valor até) (?:r\\$|rs|r\\s*\\$)?\\s*(\\d+(?:\\.\\d{3})*(?:,\\d{2})?)/i\n    ];\n    // Padrões para consulta de localização\n    const locationPatterns = [\n        /(?:carros|veículos|modelos) (?:em|na|no) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i,\n        /(?:quais|quais são|mostre|mostre-me|me mostre) (?:os|as) (?:carros|veículos|modelos) (?:em|na|no) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i,\n        /(?:carros|veículos|modelos) (?:disponíveis|que tem|que existem) (?:em|na|no) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i,\n        /(?:buscar|encontrar|procurar) (?:carros|veículos|modelos) (?:em|na|no) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i\n    ];\n    // Padrões para consulta de marca\n    const brandPatterns = [\n        /(?:carros|veículos|modelos) (?:da|de) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i,\n        /(?:quais|quais são|mostre|mostre-me|me mostre) (?:os|as) (?:carros|veículos|modelos) (?:da|de) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i,\n        /(?:carros|veículos|modelos) (?:da marca|da fabricante) ([a-zA-ZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÊÍÏÓÔÕÖÚÇÑ\\s]+)/i\n    ];\n    // Padrões para carros mais baratos\n    const cheapestPatterns = [\n        /(?:carros|veículos|modelos) (?:mais baratos|com menor preço|com preço mais baixo)/i,\n        /(?:quais|quais são|mostre|mostre-me|me mostre) (?:os|as) (?:carros|veículos|modelos) (?:mais baratos|com menor preço|com preço mais baixo)/i,\n        /(?:buscar|encontrar|procurar) (?:carros|veículos|modelos) (?:mais baratos|com menor preço|com preço mais baixo)/i\n    ];\n    // Verificar padrões de preço\n    for (const pattern of pricePatterns){\n        const match = message.match(pattern);\n        if (match) {\n            const priceStr = match[1].replace(/\\./g, \"\").replace(\",\", \".\");\n            const maxPrice = parseFloat(priceStr);\n            if (isNaN(maxPrice)) {\n                return {\n                    message: \"Desculpe, n\\xe3o consegui entender o valor informado. Por favor, tente novamente com um valor v\\xe1lido.\",\n                    suggestions: [\n                        \"Carros at\\xe9 R$ 50.000\",\n                        \"Carros at\\xe9 R$ 100.000\",\n                        \"Carros at\\xe9 R$ 150.000\"\n                    ]\n                };\n            }\n            const filteredCars = _data_cars__WEBPACK_IMPORTED_MODULE_0__.cars.filter((car)=>car.Price <= maxPrice);\n            if (filteredCars.length === 0) {\n                return {\n                    message: \"N\\xe3o encontrei carros com pre\\xe7o at\\xe9 R$ \".concat(maxPrice.toLocaleString(\"pt-BR\", {\n                        minimumFractionDigits: 2\n                    }), \".\"),\n                    suggestions: [\n                        \"Mostre os carros mais baratos\",\n                        \"Carros at\\xe9 R$ 150.000\",\n                        \"Carros at\\xe9 R$ 200.000\"\n                    ]\n                };\n            }\n            const cheapestCar = filteredCars.reduce((prev, current)=>prev.Price < current.Price ? prev : current);\n            const mostExpensiveCar = filteredCars.reduce((prev, current)=>prev.Price > current.Price ? prev : current);\n            const brands = Array.from(new Set(filteredCars.map((c)=>c.Name)));\n            return {\n                message: \"Encontrei \".concat(filteredCars.length, \" carros com pre\\xe7o at\\xe9 R$ \").concat(maxPrice.toLocaleString(\"pt-BR\", {\n                    minimumFractionDigits: 2\n                }), \":\\n\\n\") + \"\\uD83D\\uDE97 Mais barato: \".concat(cheapestCar.Name, \" \").concat(cheapestCar.Model, \" - R$ \").concat(cheapestCar.Price.toLocaleString(\"pt-BR\", {\n                    minimumFractionDigits: 2\n                }), \"\\n\") + \"\\uD83D\\uDCB0 Mais caro: \".concat(mostExpensiveCar.Name, \" \").concat(mostExpensiveCar.Model, \" - R$ \").concat(mostExpensiveCar.Price.toLocaleString(\"pt-BR\", {\n                    minimumFractionDigits: 2\n                }), \"\\n\\n\") + \"Marcas dispon\\xedveis: \".concat(brands.join(\", \")),\n                cars: filteredCars.slice(0, 5),\n                suggestions: [\n                    \"Mostre os carros mais baratos\",\n                    \"Carros at\\xe9 R$ 150.000\",\n                    \"Carros at\\xe9 R$ 200.000\"\n                ]\n            };\n        }\n    }\n    // Help command\n    if (lowerMessage.includes(\"ajuda\") || lowerMessage.includes(\"help\")) {\n        return {\n            message: \"Posso ajudar voc\\xea a encontrar carros! Voc\\xea pode me perguntar sobre:\\n\" + \"• Carros por marca\\n\" + \"• Carros por pre\\xe7o\\n\" + \"• Carros por localiza\\xe7\\xe3o\\n\" + \"• Carros mais baratos\\n\" + \"• Carros mais caros\\n\\n\" + \"Como posso ajudar?\",\n            suggestions: [\n                \"Mostre os carros mais baratos\",\n                \"Quais carros tem em S\\xe3o Paulo?\",\n                \"Carros da Toyota\",\n                \"Carros at\\xe9 R$ 100.000\"\n            ]\n        };\n    }\n    // Search by brand\n    const brandMatch = lowerMessage.match(/(?:carros|veículos|modelos) (?:da|de) (?:marca )?([a-zA-Z]+)/i);\n    if (brandMatch) {\n        const brand = brandMatch[1];\n        const filteredCars = _data_cars__WEBPACK_IMPORTED_MODULE_0__.cars.filter((car)=>car.Name.toLowerCase().includes(brand.toLowerCase()));\n        if (filteredCars.length > 0) {\n            return {\n                message: \"Encontrei \".concat(filteredCars.length, \" carro(s) da marca \").concat(brand, \":\\n\\n\") + \"O \".concat(brand, \" \").concat(filteredCars[0].Model, \" \\xe9 o mais barato, custando R$ \").concat(filteredCars[0].Price.toLocaleString(), \".\\n\") + \"O mais caro \\xe9 o \".concat(brand, \" \").concat(filteredCars[filteredCars.length - 1].Model, \", por R$ \").concat(filteredCars[filteredCars.length - 1].Price.toLocaleString(), \".\"),\n                cars: filteredCars,\n                suggestions: [\n                    \"Carros da \".concat(brand, \" at\\xe9 R$ \").concat(Math.min(...filteredCars.map((c)=>c.Price))),\n                    \"Carros da \".concat(brand, \" em \").concat(filteredCars[0].Location),\n                    \"Mostre os carros mais baratos\",\n                    \"Quais carros tem em S\\xe3o Paulo?\"\n                ]\n            };\n        }\n        return {\n            message: \"Desculpe, n\\xe3o encontrei carros da marca \".concat(brand, \". Posso te ajudar a encontrar outras marcas dispon\\xedveis?\"),\n            suggestions: [\n                \"Mostre os carros mais baratos\",\n                \"Quais carros tem em S\\xe3o Paulo?\",\n                \"Carros da Toyota\",\n                \"Carros at\\xe9 R$ 100.000\"\n            ]\n        };\n    }\n    // Search by location - Improved pattern matching\n    for (const pattern of locationPatterns){\n        const locationMatch = lowerMessage.match(pattern);\n        if (locationMatch) {\n            const location = locationMatch[1].trim();\n            const filteredCars = _data_cars__WEBPACK_IMPORTED_MODULE_0__.cars.filter((car)=>car.Location.toLowerCase().includes(location.toLowerCase()));\n            if (filteredCars.length > 0) {\n                const cheapestCar = filteredCars.reduce((a, b)=>a.Price < b.Price ? a : b);\n                const mostExpensiveCar = filteredCars.reduce((a, b)=>a.Price > b.Price ? a : b);\n                return {\n                    message: \"Encontrei \".concat(filteredCars.length, \" carro(s) em \").concat(location, \":\\n\\n\") + \"O mais barato \\xe9 o \".concat(cheapestCar.Name, \" \").concat(cheapestCar.Model, \" por R$ \").concat(cheapestCar.Price.toLocaleString(), \".\\n\") + \"O mais caro \\xe9 o \".concat(mostExpensiveCar.Name, \" \").concat(mostExpensiveCar.Model, \" por R$ \").concat(mostExpensiveCar.Price.toLocaleString(), \".\\n\\n\") + \"Marcas dispon\\xedveis: \".concat(Array.from(new Set(filteredCars.map((c)=>c.Name))).join(\", \"), \".\"),\n                    cars: filteredCars,\n                    suggestions: [\n                        \"Carros da \".concat(cheapestCar.Name),\n                        \"Carros at\\xe9 R$ \".concat(cheapestCar.Price),\n                        \"Mostre os carros mais baratos\",\n                        \"Quais carros tem em S\\xe3o Paulo?\"\n                    ]\n                };\n            }\n            return {\n                message: \"Desculpe, n\\xe3o encontrei carros em \".concat(location, \". Temos carros dispon\\xedveis em: \").concat(Array.from(new Set(_data_cars__WEBPACK_IMPORTED_MODULE_0__.cars.map((c)=>c.Location))).join(\", \"), \".\"),\n                suggestions: [\n                    \"Quais carros tem em S\\xe3o Paulo?\",\n                    \"Mostre os carros mais baratos\",\n                    \"Carros da Toyota\",\n                    \"Carros at\\xe9 R$ 100.000\"\n                ]\n            };\n        }\n    }\n    // Cheapest cars\n    if (lowerMessage.includes(\"mais barato\") || lowerMessage.includes(\"mais econ\\xf4mico\")) {\n        const sortedCars = [\n            ..._data_cars__WEBPACK_IMPORTED_MODULE_0__.cars\n        ].sort((a, b)=>a.Price - b.Price);\n        const cheapestCars = sortedCars.slice(0, 3);\n        return {\n            message: \"Aqui est\\xe3o os 3 carros mais baratos:\\n\\n\" + \"1. \".concat(cheapestCars[0].Name, \" \").concat(cheapestCars[0].Model, \" - R$ \").concat(cheapestCars[0].Price.toLocaleString(), \"\\n\") + \"2. \".concat(cheapestCars[1].Name, \" \").concat(cheapestCars[1].Model, \" - R$ \").concat(cheapestCars[1].Price.toLocaleString(), \"\\n\") + \"3. \".concat(cheapestCars[2].Name, \" \").concat(cheapestCars[2].Model, \" - R$ \").concat(cheapestCars[2].Price.toLocaleString()),\n            cars: cheapestCars,\n            suggestions: [\n                \"Carros da \".concat(cheapestCars[0].Name),\n                \"Carros em \".concat(cheapestCars[0].Location),\n                \"Carros at\\xe9 R$ 100.000\",\n                \"Quais carros tem em S\\xe3o Paulo?\"\n            ]\n        };\n    }\n    // Most expensive cars\n    if (lowerMessage.includes(\"mais caro\") || lowerMessage.includes(\"mais luxuoso\")) {\n        const sortedCars = [\n            ..._data_cars__WEBPACK_IMPORTED_MODULE_0__.cars\n        ].sort((a, b)=>b.Price - a.Price);\n        const mostExpensiveCars = sortedCars.slice(0, 3);\n        return {\n            message: \"Aqui est\\xe3o os 3 carros mais caros:\\n\\n\" + \"1. \".concat(mostExpensiveCars[0].Name, \" \").concat(mostExpensiveCars[0].Model, \" - R$ \").concat(mostExpensiveCars[0].Price.toLocaleString(), \"\\n\") + \"2. \".concat(mostExpensiveCars[1].Name, \" \").concat(mostExpensiveCars[1].Model, \" - R$ \").concat(mostExpensiveCars[1].Price.toLocaleString(), \"\\n\") + \"3. \".concat(mostExpensiveCars[2].Name, \" \").concat(mostExpensiveCars[2].Model, \" - R$ \").concat(mostExpensiveCars[2].Price.toLocaleString()),\n            cars: mostExpensiveCars,\n            suggestions: [\n                \"Carros da \".concat(mostExpensiveCars[0].Name),\n                \"Carros em \".concat(mostExpensiveCars[0].Location),\n                \"Mostre os carros mais baratos\",\n                \"Carros at\\xe9 R$ 100.000\"\n            ]\n        };\n    }\n    // Default response\n    return {\n        message: 'Desculpe, n\\xe3o entendi sua pergunta. Voc\\xea pode pedir ajuda digitando \"ajuda\" para ver as op\\xe7\\xf5es dispon\\xedveis.',\n        suggestions: [\n            \"Mostre os carros mais baratos\",\n            \"Quais carros tem em S\\xe3o Paulo?\",\n            \"Carros da Toyota\",\n            \"Carros at\\xe9 R$ 100.000\"\n        ]\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9jaGF0Ym90U2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQVM3QixlQUFlQyxlQUFlQyxPQUFlO0lBQ2xELE1BQU1DLGVBQWVELFFBQVFFLFdBQVc7SUFFeEMsaUNBQWlDO0lBQ2pDLE1BQU1DLGdCQUFnQjtRQUNwQjtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUQsdUNBQXVDO0lBQ3ZDLE1BQU1DLG1CQUFtQjtRQUN2QjtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUQsaUNBQWlDO0lBQ2pDLE1BQU1DLGdCQUFnQjtRQUNwQjtRQUNBO1FBQ0E7S0FDRDtJQUVELG1DQUFtQztJQUNuQyxNQUFNQyxtQkFBbUI7UUFDdkI7UUFDQTtRQUNBO0tBQ0Q7SUFFRCw2QkFBNkI7SUFDN0IsS0FBSyxNQUFNQyxXQUFXSixjQUFlO1FBQ25DLE1BQU1LLFFBQVFSLFFBQVFRLEtBQUssQ0FBQ0Q7UUFDNUIsSUFBSUMsT0FBTztZQUNULE1BQU1DLFdBQVdELEtBQUssQ0FBQyxFQUFFLENBQUNFLE9BQU8sQ0FBQyxPQUFPLElBQUlBLE9BQU8sQ0FBQyxLQUFLO1lBQzFELE1BQU1DLFdBQVdDLFdBQVdIO1lBRTVCLElBQUlJLE1BQU1GLFdBQVc7Z0JBQ25CLE9BQU87b0JBQ0xYLFNBQVM7b0JBQ1RjLGFBQWE7d0JBQUM7d0JBQXdCO3dCQUF5QjtxQkFBd0I7Z0JBQ3pGO1lBQ0Y7WUFFQSxNQUFNQyxlQUFlakIsNENBQUlBLENBQUNrQixNQUFNLENBQUNDLENBQUFBLE1BQU9BLElBQUlDLEtBQUssSUFBSVA7WUFFckQsSUFBSUksYUFBYUksTUFBTSxLQUFLLEdBQUc7Z0JBQzdCLE9BQU87b0JBQ0xuQixTQUFTLGtEQUF3RyxPQUEvRFcsU0FBU1MsY0FBYyxDQUFDLFNBQVM7d0JBQUVDLHVCQUF1QjtvQkFBRSxJQUFHO29CQUNqSFAsYUFBYTt3QkFBQzt3QkFBaUM7d0JBQXlCO3FCQUF3QjtnQkFDbEc7WUFDRjtZ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QTVDaUIsaUJBQWlCLENBQUMsRUFBRSxDQUFDakMsS0FBSyxDQUFDRSxjQUFjLElBQUcsUUFDbEgsTUFBbUMrQixPQUE3QkEsaUJBQWlCLENBQUMsRUFBRSxDQUFDbEIsSUFBSSxFQUFDLEtBQXNDa0IsT0FBbkNBLGlCQUFpQixDQUFDLEVBQUUsQ0FBQ2pCLEtBQUssRUFBQyxVQUFvRCxPQUE1Q2lCLGlCQUFpQixDQUFDLEVBQUUsQ0FBQ2pDLEtBQUssQ0FBQ0UsY0FBYztZQUN2SHRCLE1BQU1xRDtZQUNOckMsYUFBYTtnQkFDVixhQUFzQyxPQUExQnFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQ2xCLElBQUk7Z0JBQ3JDLGFBQTBDLE9BQTlCa0IsaUJBQWlCLENBQUMsRUFBRSxDQUFDVCxRQUFRO2dCQUMxQztnQkFDQTthQUNEO1FBQ0g7SUFDRjtJQUVBLG1CQUFtQjtJQUNuQixPQUFPO1FBQ0wxQyxTQUFTO1FBQ1RjLGFBQWE7WUFDWDtZQUNBO1lBQ0E7WUFDQTtTQUNEO0lBQ0g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvY2hhdGJvdFNlcnZpY2UudHM/MWZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYXJzIH0gZnJvbSAnLi4vZGF0YS9jYXJzJztcclxuaW1wb3J0IHsgQ2FyIH0gZnJvbSAnQC90eXBlcy9jYXInO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDaGF0Ym90UmVzcG9uc2Uge1xyXG4gIG1lc3NhZ2U6IHN0cmluZztcclxuICBjYXJzPzogdHlwZW9mIGNhcnM7XHJcbiAgc3VnZ2VzdGlvbnM/OiBzdHJpbmdbXTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZyk6IFByb21pc2U8Q2hhdGJvdFJlc3BvbnNlPiB7XHJcbiAgY29uc3QgbG93ZXJNZXNzYWdlID0gbWVzc2FnZS50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICAvLyBQYWRyw7VlcyBwYXJhIGNvbnN1bHRhIGRlIHByZcOnb1xyXG4gIGNvbnN0IHByaWNlUGF0dGVybnMgPSBbXHJcbiAgICAvKD86Y2Fycm9zfHZlw61jdWxvc3xtb2RlbG9zKSAoPzphdMOpfGFiYWl4byBkZXxtZW5vcyBkZXxjb20gcHJlw6dvIGF0w6l8Y29tIHZhbG9yIGF0w6kpICg/OnJcXCR8cnN8clxccypcXCQpP1xccyooXFxkKyg/OlxcLlxcZHszfSkqKD86LFxcZHsyfSk/KS9pLFxyXG4gICAgLyg/OnF1YWlzfHF1YWlzIHPDo298bW9zdHJlfG1vc3RyZS1tZXxtZSBtb3N0cmUpICg/Om9zfGFzKSAoPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/OmF0w6l8YWJhaXhvIGRlfG1lbm9zIGRlfGNvbSBwcmXDp28gYXTDqXxjb20gdmFsb3IgYXTDqSkgKD86clxcJHxyc3xyXFxzKlxcJCk/XFxzKihcXGQrKD86XFwuXFxkezN9KSooPzosXFxkezJ9KT8pL2ksXHJcbiAgICAvKD86Y2Fycm9zfHZlw61jdWxvc3xtb2RlbG9zKSAoPzpjb218ZGUpICg/OnByZcOnb3x2YWxvcikgKD86YXTDqXxtw6F4aW1vIGRlfG3DoXhpbW8pICg/OnJcXCR8cnN8clxccypcXCQpP1xccyooXFxkKyg/OlxcLlxcZHszfSkqKD86LFxcZHsyfSk/KS9pLFxyXG4gICAgLyg/OmJ1c2NhcnxlbmNvbnRyYXJ8cHJvY3VyYXIpICg/OmNhcnJvc3x2ZcOtY3Vsb3N8bW9kZWxvcykgKD86YXTDqXxhYmFpeG8gZGV8bWVub3MgZGV8Y29tIHByZcOnbyBhdMOpfGNvbSB2YWxvciBhdMOpKSAoPzpyXFwkfHJzfHJcXHMqXFwkKT9cXHMqKFxcZCsoPzpcXC5cXGR7M30pKig/OixcXGR7Mn0pPykvaVxyXG4gIF07XHJcblxyXG4gIC8vIFBhZHLDtWVzIHBhcmEgY29uc3VsdGEgZGUgbG9jYWxpemHDp8Ojb1xyXG4gIGNvbnN0IGxvY2F0aW9uUGF0dGVybnMgPSBbXHJcbiAgICAvKD86Y2Fycm9zfHZlw61jdWxvc3xtb2RlbG9zKSAoPzplbXxuYXxubykgKFthLXpBLVrDocOgw6LDo8Opw6jDqsOtw6/Ds8O0w7XDtsO6w6fDscOBw4DDgsODw4nDiMOKw43Dj8OTw5TDlcOWw5rDh8ORXFxzXSspL2ksXHJcbiAgICAvKD86cXVhaXN8cXVhaXMgc8Ojb3xtb3N0cmV8bW9zdHJlLW1lfG1lIG1vc3RyZSkgKD86b3N8YXMpICg/OmNhcnJvc3x2ZcOtY3Vsb3N8bW9kZWxvcykgKD86ZW18bmF8bm8pIChbYS16QS1aw6HDoMOiw6PDqcOow6rDrcOvw7PDtMO1w7bDusOnw7HDgcOAw4LDg8OJw4jDisONw4/Dk8OUw5XDlsOaw4fDkVxcc10rKS9pLFxyXG4gICAgLyg/OmNhcnJvc3x2ZcOtY3Vsb3N8bW9kZWxvcykgKD86ZGlzcG9uw612ZWlzfHF1ZSB0ZW18cXVlIGV4aXN0ZW0pICg/OmVtfG5hfG5vKSAoW2EtekEtWsOhw6DDosOjw6nDqMOqw63Dr8Ozw7TDtcO2w7rDp8Oxw4HDgMOCw4PDicOIw4rDjcOPw5PDlMOVw5bDmsOHw5FcXHNdKykvaSxcclxuICAgIC8oPzpidXNjYXJ8ZW5jb250cmFyfHByb2N1cmFyKSAoPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/OmVtfG5hfG5vKSAoW2EtekEtWsOhw6DDosOjw6nDqMOqw63Dr8Ozw7TDtcO2w7rDp8Oxw4HDgMOCw4PDicOIw4rDjcOPw5PDlMOVw5bDmsOHw5FcXHNdKykvaVxyXG4gIF07XHJcblxyXG4gIC8vIFBhZHLDtWVzIHBhcmEgY29uc3VsdGEgZGUgbWFyY2FcclxuICBjb25zdCBicmFuZFBhdHRlcm5zID0gW1xyXG4gICAgLyg/OmNhcnJvc3x2ZcOtY3Vsb3N8bW9kZWxvcykgKD86ZGF8ZGUpIChbYS16QS1aw6HDoMOiw6PDqcOow6rDrcOvw7PDtMO1w7bDusOnw7HDgcOAw4LDg8OJw4jDisONw4/Dk8OUw5XDlsOaw4fDkVxcc10rKS9pLFxyXG4gICAgLyg/OnF1YWlzfHF1YWlzIHPDo298bW9zdHJlfG1vc3RyZS1tZXxtZSBtb3N0cmUpICg/Om9zfGFzKSAoPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/OmRhfGRlKSAoW2EtekEtWsOhw6DDosOjw6nDqMOqw63Dr8Ozw7TDtcO2w7rDp8Oxw4HDgMOCw4PDicOIw4rDjcOPw5PDlMOVw5bDmsOHw5FcXHNdKykvaSxcclxuICAgIC8oPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/OmRhIG1hcmNhfGRhIGZhYnJpY2FudGUpIChbYS16QS1aw6HDoMOiw6PDqcOow6rDrcOvw7PDtMO1w7bDusOnw7HDgcOAw4LDg8OJw4jDisONw4/Dk8OUw5XDlsOaw4fDkVxcc10rKS9pXHJcbiAgXTtcclxuXHJcbiAgLy8gUGFkcsO1ZXMgcGFyYSBjYXJyb3MgbWFpcyBiYXJhdG9zXHJcbiAgY29uc3QgY2hlYXBlc3RQYXR0ZXJucyA9IFtcclxuICAgIC8oPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/Om1haXMgYmFyYXRvc3xjb20gbWVub3IgcHJlw6dvfGNvbSBwcmXDp28gbWFpcyBiYWl4bykvaSxcclxuICAgIC8oPzpxdWFpc3xxdWFpcyBzw6NvfG1vc3RyZXxtb3N0cmUtbWV8bWUgbW9zdHJlKSAoPzpvc3xhcykgKD86Y2Fycm9zfHZlw61jdWxvc3xtb2RlbG9zKSAoPzptYWlzIGJhcmF0b3N8Y29tIG1lbm9yIHByZcOnb3xjb20gcHJlw6dvIG1haXMgYmFpeG8pL2ksXHJcbiAgICAvKD86YnVzY2FyfGVuY29udHJhcnxwcm9jdXJhcikgKD86Y2Fycm9zfHZlw61jdWxvc3xtb2RlbG9zKSAoPzptYWlzIGJhcmF0b3N8Y29tIG1lbm9yIHByZcOnb3xjb20gcHJlw6dvIG1haXMgYmFpeG8pL2lcclxuICBdO1xyXG5cclxuICAvLyBWZXJpZmljYXIgcGFkcsO1ZXMgZGUgcHJlw6dvXHJcbiAgZm9yIChjb25zdCBwYXR0ZXJuIG9mIHByaWNlUGF0dGVybnMpIHtcclxuICAgIGNvbnN0IG1hdGNoID0gbWVzc2FnZS5tYXRjaChwYXR0ZXJuKTtcclxuICAgIGlmIChtYXRjaCkge1xyXG4gICAgICBjb25zdCBwcmljZVN0ciA9IG1hdGNoWzFdLnJlcGxhY2UoL1xcLi9nLCAnJykucmVwbGFjZSgnLCcsICcuJyk7XHJcbiAgICAgIGNvbnN0IG1heFByaWNlID0gcGFyc2VGbG9hdChwcmljZVN0cik7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoaXNOYU4obWF4UHJpY2UpKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIG1lc3NhZ2U6IFwiRGVzY3VscGUsIG7Do28gY29uc2VndWkgZW50ZW5kZXIgbyB2YWxvciBpbmZvcm1hZG8uIFBvciBmYXZvciwgdGVudGUgbm92YW1lbnRlIGNvbSB1bSB2YWxvciB2w6FsaWRvLlwiLFxyXG4gICAgICAgICAgc3VnZ2VzdGlvbnM6IFsnQ2Fycm9zIGF0w6kgUiQgNTAuMDAwJywgJ0NhcnJvcyBhdMOpIFIkIDEwMC4wMDAnLCAnQ2Fycm9zIGF0w6kgUiQgMTUwLjAwMCddXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgZmlsdGVyZWRDYXJzID0gY2Fycy5maWx0ZXIoY2FyID0+IGNhci5QcmljZSA8PSBtYXhQcmljZSk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoZmlsdGVyZWRDYXJzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBtZXNzYWdlOiBgTsOjbyBlbmNvbnRyZWkgY2Fycm9zIGNvbSBwcmXDp28gYXTDqSBSJCAke21heFByaWNlLnRvTG9jYWxlU3RyaW5nKCdwdC1CUicsIHsgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyIH0pfS5gLFxyXG4gICAgICAgICAgc3VnZ2VzdGlvbnM6IFsnTW9zdHJlIG9zIGNhcnJvcyBtYWlzIGJhcmF0b3MnLCAnQ2Fycm9zIGF0w6kgUiQgMTUwLjAwMCcsICdDYXJyb3MgYXTDqSBSJCAyMDAuMDAwJ11cclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBjaGVhcGVzdENhciA9IGZpbHRlcmVkQ2Fycy5yZWR1Y2UoKHByZXYsIGN1cnJlbnQpID0+IFxyXG4gICAgICAgIHByZXYuUHJpY2UgPCBjdXJyZW50LlByaWNlID8gcHJldiA6IGN1cnJlbnRcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgbW9zdEV4cGVuc2l2ZUNhciA9IGZpbHRlcmVkQ2Fycy5yZWR1Y2UoKHByZXYsIGN1cnJlbnQpID0+IFxyXG4gICAgICAgIHByZXYuUHJpY2UgPiBjdXJyZW50LlByaWNlID8gcHJldiA6IGN1cnJlbnRcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbnN0IGJyYW5kcyA9IEFycmF5LmZyb20obmV3IFNldChmaWx0ZXJlZENhcnMubWFwKGMgPT4gYy5OYW1lKSkpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBtZXNzYWdlOiBgRW5jb250cmVpICR7ZmlsdGVyZWRDYXJzLmxlbmd0aH0gY2Fycm9zIGNvbSBwcmXDp28gYXTDqSBSJCAke21heFByaWNlLnRvTG9jYWxlU3RyaW5nKCdwdC1CUicsIHsgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyIH0pfTpcXG5cXG5gICtcclxuICAgICAgICAgICAgICAgIGDwn5qXIE1haXMgYmFyYXRvOiAke2NoZWFwZXN0Q2FyLk5hbWV9ICR7Y2hlYXBlc3RDYXIuTW9kZWx9IC0gUiQgJHtjaGVhcGVzdENhci5QcmljZS50b0xvY2FsZVN0cmluZygncHQtQlInLCB7IG1pbmltdW1GcmFjdGlvbkRpZ2l0czogMiB9KX1cXG5gICtcclxuICAgICAgICAgICAgICAgIGDwn5KwIE1haXMgY2FybzogJHttb3N0RXhwZW5zaXZlQ2FyLk5hbWV9ICR7bW9zdEV4cGVuc2l2ZUNhci5Nb2RlbH0gLSBSJCAke21vc3RFeHBlbnNpdmVDYXIuUHJpY2UudG9Mb2NhbGVTdHJpbmcoJ3B0LUJSJywgeyBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IDIgfSl9XFxuXFxuYCArXHJcbiAgICAgICAgICAgICAgICBgTWFyY2FzIGRpc3BvbsOtdmVpczogJHticmFuZHMuam9pbignLCAnKX1gLFxyXG4gICAgICAgIGNhcnM6IGZpbHRlcmVkQ2Fycy5zbGljZSgwLCA1KSxcclxuICAgICAgICBzdWdnZXN0aW9uczogWydNb3N0cmUgb3MgY2Fycm9zIG1haXMgYmFyYXRvcycsICdDYXJyb3MgYXTDqSBSJCAxNTAuMDAwJywgJ0NhcnJvcyBhdMOpIFIkIDIwMC4wMDAnXVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gSGVscCBjb21tYW5kXHJcbiAgaWYgKGxvd2VyTWVzc2FnZS5pbmNsdWRlcygnYWp1ZGEnKSB8fCBsb3dlck1lc3NhZ2UuaW5jbHVkZXMoJ2hlbHAnKSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbWVzc2FnZTogJ1Bvc3NvIGFqdWRhciB2b2PDqiBhIGVuY29udHJhciBjYXJyb3MhIFZvY8OqIHBvZGUgbWUgcGVyZ3VudGFyIHNvYnJlOlxcbicgK1xyXG4gICAgICAgICfigKIgQ2Fycm9zIHBvciBtYXJjYVxcbicgK1xyXG4gICAgICAgICfigKIgQ2Fycm9zIHBvciBwcmXDp29cXG4nICtcclxuICAgICAgICAn4oCiIENhcnJvcyBwb3IgbG9jYWxpemHDp8Ojb1xcbicgK1xyXG4gICAgICAgICfigKIgQ2Fycm9zIG1haXMgYmFyYXRvc1xcbicgK1xyXG4gICAgICAgICfigKIgQ2Fycm9zIG1haXMgY2Fyb3NcXG5cXG4nICtcclxuICAgICAgICAnQ29tbyBwb3NzbyBhanVkYXI/JyxcclxuICAgICAgc3VnZ2VzdGlvbnM6IFtcclxuICAgICAgICAnTW9zdHJlIG9zIGNhcnJvcyBtYWlzIGJhcmF0b3MnLFxyXG4gICAgICAgICdRdWFpcyBjYXJyb3MgdGVtIGVtIFPDo28gUGF1bG8/JyxcclxuICAgICAgICAnQ2Fycm9zIGRhIFRveW90YScsXHJcbiAgICAgICAgJ0NhcnJvcyBhdMOpIFIkIDEwMC4wMDAnXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBTZWFyY2ggYnkgYnJhbmRcclxuICBjb25zdCBicmFuZE1hdGNoID0gbG93ZXJNZXNzYWdlLm1hdGNoKC8oPzpjYXJyb3N8dmXDrWN1bG9zfG1vZGVsb3MpICg/OmRhfGRlKSAoPzptYXJjYSApPyhbYS16QS1aXSspL2kpO1xyXG4gIGlmIChicmFuZE1hdGNoKSB7XHJcbiAgICBjb25zdCBicmFuZCA9IGJyYW5kTWF0Y2hbMV07XHJcbiAgICBjb25zdCBmaWx0ZXJlZENhcnMgPSBjYXJzLmZpbHRlcihjYXIgPT4gXHJcbiAgICAgIGNhci5OYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoYnJhbmQudG9Mb3dlckNhc2UoKSlcclxuICAgICk7XHJcbiAgICBcclxuICAgIGlmIChmaWx0ZXJlZENhcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIG1lc3NhZ2U6IGBFbmNvbnRyZWkgJHtmaWx0ZXJlZENhcnMubGVuZ3RofSBjYXJybyhzKSBkYSBtYXJjYSAke2JyYW5kfTpcXG5cXG5gICtcclxuICAgICAgICAgICAgICAgIGBPICR7YnJhbmR9ICR7ZmlsdGVyZWRDYXJzWzBdLk1vZGVsfSDDqSBvIG1haXMgYmFyYXRvLCBjdXN0YW5kbyBSJCAke2ZpbHRlcmVkQ2Fyc1swXS5QcmljZS50b0xvY2FsZVN0cmluZygpfS5cXG5gICtcclxuICAgICAgICAgICAgICAgIGBPIG1haXMgY2FybyDDqSBvICR7YnJhbmR9ICR7ZmlsdGVyZWRDYXJzW2ZpbHRlcmVkQ2Fycy5sZW5ndGggLSAxXS5Nb2RlbH0sIHBvciBSJCAke2ZpbHRlcmVkQ2Fyc1tmaWx0ZXJlZENhcnMubGVuZ3RoIC0gMV0uUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX0uYCxcclxuICAgICAgICBjYXJzOiBmaWx0ZXJlZENhcnMsXHJcbiAgICAgICAgc3VnZ2VzdGlvbnM6IFtcclxuICAgICAgICAgIGBDYXJyb3MgZGEgJHticmFuZH0gYXTDqSBSJCAke01hdGgubWluKC4uLmZpbHRlcmVkQ2Fycy5tYXAoYyA9PiBjLlByaWNlKSl9YCxcclxuICAgICAgICAgIGBDYXJyb3MgZGEgJHticmFuZH0gZW0gJHtmaWx0ZXJlZENhcnNbMF0uTG9jYXRpb259YCxcclxuICAgICAgICAgICdNb3N0cmUgb3MgY2Fycm9zIG1haXMgYmFyYXRvcycsXHJcbiAgICAgICAgICAnUXVhaXMgY2Fycm9zIHRlbSBlbSBTw6NvIFBhdWxvPydcclxuICAgICAgICBdXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBtZXNzYWdlOiBgRGVzY3VscGUsIG7Do28gZW5jb250cmVpIGNhcnJvcyBkYSBtYXJjYSAke2JyYW5kfS4gUG9zc28gdGUgYWp1ZGFyIGEgZW5jb250cmFyIG91dHJhcyBtYXJjYXMgZGlzcG9uw612ZWlzP2AsXHJcbiAgICAgIHN1Z2dlc3Rpb25zOiBbXHJcbiAgICAgICAgJ01vc3RyZSBvcyBjYXJyb3MgbWFpcyBiYXJhdG9zJyxcclxuICAgICAgICAnUXVhaXMgY2Fycm9zIHRlbSBlbSBTw6NvIFBhdWxvPycsXHJcbiAgICAgICAgJ0NhcnJvcyBkYSBUb3lvdGEnLFxyXG4gICAgICAgICdDYXJyb3MgYXTDqSBSJCAxMDAuMDAwJ1xyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gU2VhcmNoIGJ5IGxvY2F0aW9uIC0gSW1wcm92ZWQgcGF0dGVybiBtYXRjaGluZ1xyXG4gIGZvciAoY29uc3QgcGF0dGVybiBvZiBsb2NhdGlvblBhdHRlcm5zKSB7XHJcbiAgICBjb25zdCBsb2NhdGlvbk1hdGNoID0gbG93ZXJNZXNzYWdlLm1hdGNoKHBhdHRlcm4pO1xyXG4gICAgaWYgKGxvY2F0aW9uTWF0Y2gpIHtcclxuICAgICAgY29uc3QgbG9jYXRpb24gPSBsb2NhdGlvbk1hdGNoWzFdLnRyaW0oKTtcclxuICAgICAgY29uc3QgZmlsdGVyZWRDYXJzID0gY2Fycy5maWx0ZXIoY2FyID0+IFxyXG4gICAgICAgIGNhci5Mb2NhdGlvbi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvY2F0aW9uLnRvTG93ZXJDYXNlKCkpXHJcbiAgICAgICk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoZmlsdGVyZWRDYXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zdCBjaGVhcGVzdENhciA9IGZpbHRlcmVkQ2Fycy5yZWR1Y2UoKGEsIGIpID0+IGEuUHJpY2UgPCBiLlByaWNlID8gYSA6IGIpO1xyXG4gICAgICAgIGNvbnN0IG1vc3RFeHBlbnNpdmVDYXIgPSBmaWx0ZXJlZENhcnMucmVkdWNlKChhLCBiKSA9PiBhLlByaWNlID4gYi5QcmljZSA/IGEgOiBiKTtcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgbWVzc2FnZTogYEVuY29udHJlaSAke2ZpbHRlcmVkQ2Fycy5sZW5ndGh9IGNhcnJvKHMpIGVtICR7bG9jYXRpb259OlxcblxcbmAgK1xyXG4gICAgICAgICAgICAgICAgICBgTyBtYWlzIGJhcmF0byDDqSBvICR7Y2hlYXBlc3RDYXIuTmFtZX0gJHtjaGVhcGVzdENhci5Nb2RlbH0gcG9yIFIkICR7Y2hlYXBlc3RDYXIuUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX0uXFxuYCArXHJcbiAgICAgICAgICAgICAgICAgIGBPIG1haXMgY2FybyDDqSBvICR7bW9zdEV4cGVuc2l2ZUNhci5OYW1lfSAke21vc3RFeHBlbnNpdmVDYXIuTW9kZWx9IHBvciBSJCAke21vc3RFeHBlbnNpdmVDYXIuUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX0uXFxuXFxuYCArXHJcbiAgICAgICAgICAgICAgICAgIGBNYXJjYXMgZGlzcG9uw612ZWlzOiAke0FycmF5LmZyb20obmV3IFNldChmaWx0ZXJlZENhcnMubWFwKGMgPT4gYy5OYW1lKSkpLmpvaW4oJywgJyl9LmAsXHJcbiAgICAgICAgICBjYXJzOiBmaWx0ZXJlZENhcnMsXHJcbiAgICAgICAgICBzdWdnZXN0aW9uczogW1xyXG4gICAgICAgICAgICBgQ2Fycm9zIGRhICR7Y2hlYXBlc3RDYXIuTmFtZX1gLFxyXG4gICAgICAgICAgICBgQ2Fycm9zIGF0w6kgUiQgJHtjaGVhcGVzdENhci5QcmljZX1gLFxyXG4gICAgICAgICAgICAnTW9zdHJlIG9zIGNhcnJvcyBtYWlzIGJhcmF0b3MnLFxyXG4gICAgICAgICAgICAnUXVhaXMgY2Fycm9zIHRlbSBlbSBTw6NvIFBhdWxvPydcclxuICAgICAgICAgIF1cclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgbWVzc2FnZTogYERlc2N1bHBlLCBuw6NvIGVuY29udHJlaSBjYXJyb3MgZW0gJHtsb2NhdGlvbn0uIFRlbW9zIGNhcnJvcyBkaXNwb27DrXZlaXMgZW06ICR7QXJyYXkuZnJvbShuZXcgU2V0KGNhcnMubWFwKGMgPT4gYy5Mb2NhdGlvbikpKS5qb2luKCcsICcpfS5gLFxyXG4gICAgICAgIHN1Z2dlc3Rpb25zOiBbXHJcbiAgICAgICAgICAnUXVhaXMgY2Fycm9zIHRlbSBlbSBTw6NvIFBhdWxvPycsXHJcbiAgICAgICAgICAnTW9zdHJlIG9zIGNhcnJvcyBtYWlzIGJhcmF0b3MnLFxyXG4gICAgICAgICAgJ0NhcnJvcyBkYSBUb3lvdGEnLFxyXG4gICAgICAgICAgJ0NhcnJvcyBhdMOpIFIkIDEwMC4wMDAnXHJcbiAgICAgICAgXVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQ2hlYXBlc3QgY2Fyc1xyXG4gIGlmIChsb3dlck1lc3NhZ2UuaW5jbHVkZXMoJ21haXMgYmFyYXRvJykgfHwgbG93ZXJNZXNzYWdlLmluY2x1ZGVzKCdtYWlzIGVjb27DtG1pY28nKSkge1xyXG4gICAgY29uc3Qgc29ydGVkQ2FycyA9IFsuLi5jYXJzXS5zb3J0KChhLCBiKSA9PiBhLlByaWNlIC0gYi5QcmljZSk7XHJcbiAgICBjb25zdCBjaGVhcGVzdENhcnMgPSBzb3J0ZWRDYXJzLnNsaWNlKDAsIDMpO1xyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBtZXNzYWdlOiAnQXF1aSBlc3TDo28gb3MgMyBjYXJyb3MgbWFpcyBiYXJhdG9zOlxcblxcbicgK1xyXG4gICAgICAgICAgICAgIGAxLiAke2NoZWFwZXN0Q2Fyc1swXS5OYW1lfSAke2NoZWFwZXN0Q2Fyc1swXS5Nb2RlbH0gLSBSJCAke2NoZWFwZXN0Q2Fyc1swXS5QcmljZS50b0xvY2FsZVN0cmluZygpfVxcbmAgK1xyXG4gICAgICAgICAgICAgIGAyLiAke2NoZWFwZXN0Q2Fyc1sxXS5OYW1lfSAke2NoZWFwZXN0Q2Fyc1sxXS5Nb2RlbH0gLSBSJCAke2NoZWFwZXN0Q2Fyc1sxXS5QcmljZS50b0xvY2FsZVN0cmluZygpfVxcbmAgK1xyXG4gICAgICAgICAgICAgIGAzLiAke2NoZWFwZXN0Q2Fyc1syXS5OYW1lfSAke2NoZWFwZXN0Q2Fyc1syXS5Nb2RlbH0gLSBSJCAke2NoZWFwZXN0Q2Fyc1syXS5QcmljZS50b0xvY2FsZVN0cmluZygpfWAsXHJcbiAgICAgIGNhcnM6IGNoZWFwZXN0Q2FycyxcclxuICAgICAgc3VnZ2VzdGlvbnM6IFtcclxuICAgICAgICBgQ2Fycm9zIGRhICR7Y2hlYXBlc3RDYXJzWzBdLk5hbWV9YCxcclxuICAgICAgICBgQ2Fycm9zIGVtICR7Y2hlYXBlc3RDYXJzWzBdLkxvY2F0aW9ufWAsXHJcbiAgICAgICAgJ0NhcnJvcyBhdMOpIFIkIDEwMC4wMDAnLFxyXG4gICAgICAgICdRdWFpcyBjYXJyb3MgdGVtIGVtIFPDo28gUGF1bG8/J1xyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gTW9zdCBleHBlbnNpdmUgY2Fyc1xyXG4gIGlmIChsb3dlck1lc3NhZ2UuaW5jbHVkZXMoJ21haXMgY2FybycpIHx8IGxvd2VyTWVzc2FnZS5pbmNsdWRlcygnbWFpcyBsdXh1b3NvJykpIHtcclxuICAgIGNvbnN0IHNvcnRlZENhcnMgPSBbLi4uY2Fyc10uc29ydCgoYSwgYikgPT4gYi5QcmljZSAtIGEuUHJpY2UpO1xyXG4gICAgY29uc3QgbW9zdEV4cGVuc2l2ZUNhcnMgPSBzb3J0ZWRDYXJzLnNsaWNlKDAsIDMpO1xyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBtZXNzYWdlOiAnQXF1aSBlc3TDo28gb3MgMyBjYXJyb3MgbWFpcyBjYXJvczpcXG5cXG4nICtcclxuICAgICAgICAgICAgICBgMS4gJHttb3N0RXhwZW5zaXZlQ2Fyc1swXS5OYW1lfSAke21vc3RFeHBlbnNpdmVDYXJzWzBdLk1vZGVsfSAtIFIkICR7bW9zdEV4cGVuc2l2ZUNhcnNbMF0uUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX1cXG5gICtcclxuICAgICAgICAgICAgICBgMi4gJHttb3N0RXhwZW5zaXZlQ2Fyc1sxXS5OYW1lfSAke21vc3RFeHBlbnNpdmVDYXJzWzFdLk1vZGVsfSAtIFIkICR7bW9zdEV4cGVuc2l2ZUNhcnNbMV0uUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX1cXG5gICtcclxuICAgICAgICAgICAgICBgMy4gJHttb3N0RXhwZW5zaXZlQ2Fyc1syXS5OYW1lfSAke21vc3RFeHBlbnNpdmVDYXJzWzJdLk1vZGVsfSAtIFIkICR7bW9zdEV4cGVuc2l2ZUNhcnNbMl0uUHJpY2UudG9Mb2NhbGVTdHJpbmcoKX1gLFxyXG4gICAgICBjYXJzOiBtb3N0RXhwZW5zaXZlQ2FycyxcclxuICAgICAgc3VnZ2VzdGlvbnM6IFtcclxuICAgICAgICBgQ2Fycm9zIGRhICR7bW9zdEV4cGVuc2l2ZUNhcnNbMF0uTmFtZX1gLFxyXG4gICAgICAgIGBDYXJyb3MgZW0gJHttb3N0RXhwZW5zaXZlQ2Fyc1swXS5Mb2NhdGlvbn1gLFxyXG4gICAgICAgICdNb3N0cmUgb3MgY2Fycm9zIG1haXMgYmFyYXRvcycsXHJcbiAgICAgICAgJ0NhcnJvcyBhdMOpIFIkIDEwMC4wMDAnXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBEZWZhdWx0IHJlc3BvbnNlXHJcbiAgcmV0dXJuIHtcclxuICAgIG1lc3NhZ2U6ICdEZXNjdWxwZSwgbsOjbyBlbnRlbmRpIHN1YSBwZXJndW50YS4gVm9jw6ogcG9kZSBwZWRpciBhanVkYSBkaWdpdGFuZG8gXCJhanVkYVwiIHBhcmEgdmVyIGFzIG9ww6fDtWVzIGRpc3BvbsOtdmVpcy4nLFxyXG4gICAgc3VnZ2VzdGlvbnM6IFtcclxuICAgICAgJ01vc3RyZSBvcyBjYXJyb3MgbWFpcyBiYXJhdG9zJyxcclxuICAgICAgJ1F1YWlzIGNhcnJvcyB0ZW0gZW0gU8OjbyBQYXVsbz8nLFxyXG4gICAgICAnQ2Fycm9zIGRhIFRveW90YScsXHJcbiAgICAgICdDYXJyb3MgYXTDqSBSJCAxMDAuMDAwJ1xyXG4gICAgXVxyXG4gIH07XHJcbn0gIl0sIm5hbWVzIjpbImNhcnMiLCJwcm9jZXNzTWVzc2FnZSIsIm1lc3NhZ2UiLCJsb3dlck1lc3NhZ2UiLCJ0b0xvd2VyQ2FzZSIsInByaWNlUGF0dGVybnMiLCJsb2NhdGlvblBhdHRlcm5zIiwiYnJhbmRQYXR0ZXJucyIsImNoZWFwZXN0UGF0dGVybnMiLCJwYXR0ZXJuIiwibWF0Y2giLCJwcmljZVN0ciIsInJlcGxhY2UiLCJtYXhQcmljZSIsInBhcnNlRmxvYXQiLCJpc05hTiIsInN1Z2dlc3Rpb25zIiwiZmlsdGVyZWRDYXJzIiwiZmlsdGVyIiwiY2FyIiwiUHJpY2UiLCJsZW5ndGgiLCJ0b0xvY2FsZVN0cmluZyIsIm1pbmltdW1GcmFjdGlvbkRpZ2l0cyIsImNoZWFwZXN0Q2FyIiwicmVkdWNlIiwicHJldiIsImN1cnJlbnQiLCJtb3N0RXhwZW5zaXZlQ2FyIiwiYnJhbmRzIiwiQXJyYXkiLCJmcm9tIiwiU2V0IiwibWFwIiwiYyIsIk5hbWUiLCJNb2RlbCIsImpvaW4iLCJzbGljZSIsImluY2x1ZGVzIiwiYnJhbmRNYXRjaCIsImJyYW5kIiwiTWF0aCIsIm1pbiIsIkxvY2F0aW9uIiwibG9jYXRpb25NYXRjaCIsImxvY2F0aW9uIiwidHJpbSIsImEiLCJiIiwic29ydGVkQ2FycyIsInNvcnQiLCJjaGVhcGVzdENhcnMiLCJtb3N0RXhwZW5zaXZlQ2FycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/chatbotService.ts\n"));

/***/ })

});